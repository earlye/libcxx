image: index.docker.io/ericwf/libcxx-gitlab-runner:latest
variables:
  ROOT: $CI_PROJECT_DIR/
  GIT_STRATEGY: none

stages:
  - stage_all
  - stage_projects
  - configure
  - build
  - test

.staged-env:
  artifacts:
    when: always
    paths:
      - llvm-project/
      - ci/$CI_PROJECT_PATH/
      - stage/STAGE_HERE
      - build/BUILD_HERE

.staged-libcxx:
  extends: .staged-env
  variables:
    PROJECT_NAME: "libcxx"
    LLVM_PROJECT: stage/libcxx/llvm-project
    SOURCE: stage/libcxx/llvm-project/libcxx
    BUILD: build/libcxx
  artifacts:
    when: always
    paths:
      - stage/libcxx/llvm-project/
      - build/libcxx/

stage_all:libcxx:
  extends: .staged-env
  stage: stage_all
  variables:
    GIT_STRATEGY: clone
  script:
    - ./utils/gitlab/display_environment.sh
    - cp ./utils/gitlab/setup_source_tree.sh /tmp/setup_sources.sh
    - /tmp/setup_sources.sh
    - echo "Done staging sources"

stage_projects:libcxx:
  extends: .staged-libcxx
  stage: stage_projects
  script:
    - pwd
    - ls
    - mkdir stage/libcxx
    - cp -R llvm-project/ stage/libcxx/llvm-project
    - rm -rf stage/libcxx/llvm-project/libcxx
    - cp -R ci/$CI_PROJECT_NAMESPACE/libcxx stage/libcxx/llvm-project/libcxx
    - mkdir build/libcxx

configure:libcxx:
  extends: .staged-libcxx
  stage: configure
  script:
    - echo "configure"
    - mkdir $BUILD
    - cd $BUILD
    - cmake -G Ninja -DCMAKE_BUILD_TYPE=RELWITHDEBINFO -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ "-DLLVM_ENABLE_PROJECTS=libcxx;libcxxabi" $LLVM_PROJECT/llvm
  dependencies:
    - stage_projects:libcxx

build:libcxx:
  extends: .staged-libcxx
  stage: build
  script:
    - ls
    - cd build/libcxx
    - ninja cxx
  dependencies:
    - configure:libcxx

test:libcxx:
  extends: .staged-libcxx
  stage: test
  script:
      - ls
      - cd build/libcxx
      - ninja checx-cxx
  dependencies:
    - build:libcxx
