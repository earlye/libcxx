module std [system] {
  // FIXME: The standard does not require that each of these submodules
  // re-exports its imported modules. We should provide an alternative form of
  // export that issues a warning if a name from the submodule is used, and
  // use that to provide a 'strict mode' for libc++.

  // Deprecated C-compatibility headers. These can all be included from within
  // an 'extern "C"' context.
  module depr [extern_c] {

    // FIXME: <stdalign.h> is missing.
    module signal_h {
      // <signal.h> __need_* macros require textual inclusion.
      textual header "signal.h"

    }
    // <stdarg.h> provided by compiler.
    // <stdbool.h> provided by compiler.
    module stddef_h {
      // <stddef.h>'s __need_* macros require textual inclusion.
      textual header "stddef.h"

    }
    module stdlib_h {
      // <stdlib.h>'s __need_* macros require textual inclusion.
      textual header "stdlib.h"

    }

  }

  // C compatibility headers.
  module compat {
    module cassert {
      // <cassert>'s use of NDEBUG requires textual inclusion.
      textual header "cassert"
    }
    module csignal {
      header "csignal"
    }
    module ciso646 {
      header "ciso646"
    }
    module cstdlib {
      header "cstdlib"

    }

    module cstddef {
      header "cstddef"

    }


  }

}
