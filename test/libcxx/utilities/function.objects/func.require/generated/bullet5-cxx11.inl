// -*- C++ -*- //

  {
    typedef ReturnTag<void()> (FuncType)();
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*,  ReturnTag<void()> >(fn);
    bullet_five_assert<FuncType&,  ReturnTag<void()> >(fn);
    bullet_five_assert<FuncType*&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* const&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* volatile&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* const volatile&,  ReturnTag<void()> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&,  ReturnTag<void()> >(fn);
    bullet_five_assert<FuncType*&&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* const&&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* volatile&&,  ReturnTag<void()> >(fnp);
    bullet_five_assert<FuncType* const volatile&&,  ReturnTag<void()> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &)> (FuncType)(STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, ReturnTag<void(STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, ReturnTag<void(STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, ReturnTag<void(STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, ReturnTag<void(STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&)> (FuncType)(STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, ReturnTag<void(STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, ReturnTag<void(STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, ReturnTag<void(STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, ReturnTag<void(STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &)> (FuncType)(STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, ReturnTag<void(STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, ReturnTag<void(STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, ReturnTag<void(STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, ReturnTag<void(STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&)> (FuncType)(STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, ReturnTag<void(STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &)> (FuncType)(STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, ReturnTag<void(STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&)> (FuncType)(STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &)> (FuncType)(STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&)> (FuncType)(STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &)> (FuncType)(STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&)> (FuncType)(STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &)> (FuncType)(STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&)> (FuncType)(STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &)> (FuncType)(STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&)> (FuncType)(STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &)> (FuncType)(STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &)> (FuncType)(STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&)> (FuncType)(STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &)> (FuncType)(STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&)> (FuncType)(STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &)> (FuncType)(STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &)> (FuncType)(STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&)> (FuncType)(STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &)> (FuncType)(STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&)> (FuncType)(STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &)> (FuncType)(STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &)> (FuncType)(STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&)> (FuncType)(STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &)> (FuncType)(STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&)> (FuncType)(STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &)> (FuncType)(STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&)> (FuncType)(STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &)> (FuncType)(STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &)> (FuncType)(STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &)> (FuncType)(STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 &)> (FuncType)(STag1 &, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 &&)> (FuncType)(STag1 &, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 const &)> (FuncType)(STag1 &, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> (FuncType)(STag1 &, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> (FuncType)(STag1 &, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> (FuncType)(STag1 &, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> (FuncType)(STag1 &, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 &)> (FuncType)(STag1 &, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> (FuncType)(STag1 &, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> (FuncType)(STag1 &, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> (FuncType)(STag1 &, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> (FuncType)(STag1 &, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 &, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 &, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 &)> (FuncType)(STag1 &, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> (FuncType)(STag1 &, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> (FuncType)(STag1 &, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> (FuncType)(STag1 &, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> (FuncType)(STag1 &, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 &, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 &, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> (FuncType)(STag1 &, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> (FuncType)(STag1 &, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> (FuncType)(STag1 &, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> (FuncType)(STag1 &, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 &, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 &, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 &, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> (FuncType)(STag1 &, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> (FuncType)(STag1 &, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> (FuncType)(STag1 &, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 &, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 &, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 &, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 &, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> (FuncType)(STag1 &, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 &, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 &, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 &, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 &, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 &, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 &, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> (FuncType)(STag1 &, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 &, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 &, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 &, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 &, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 &, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 &, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 &, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 &)> (FuncType)(STag1 &&, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> (FuncType)(STag1 &&, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> (FuncType)(STag1 &&, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> (FuncType)(STag1 &&, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> (FuncType)(STag1 &&, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> (FuncType)(STag1 &&, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> (FuncType)(STag1 &&, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> (FuncType)(STag1 &&, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> (FuncType)(STag1 &&, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> (FuncType)(STag1 &&, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> (FuncType)(STag1 &&, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> (FuncType)(STag1 &&, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> (FuncType)(STag1 &&, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> (FuncType)(STag1 &&, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> (FuncType)(STag1 &&, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> (FuncType)(STag1 &&, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> (FuncType)(STag1 &&, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> (FuncType)(STag1 &&, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> (FuncType)(STag1 &&, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 &&, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> (FuncType)(STag1 &&, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> (FuncType)(STag1 &&, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> (FuncType)(STag1 &&, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 &&, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 &&, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 &&, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 &)> (FuncType)(STag1 const &, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> (FuncType)(STag1 const &, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> (FuncType)(STag1 const &, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> (FuncType)(STag1 const &, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> (FuncType)(STag1 const &, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> (FuncType)(STag1 const &, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> (FuncType)(STag1 const &, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> (FuncType)(STag1 const &, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> (FuncType)(STag1 const &, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> (FuncType)(STag1 const &, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> (FuncType)(STag1 const &, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> (FuncType)(STag1 const &, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> (FuncType)(STag1 const &, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> (FuncType)(STag1 const &, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> (FuncType)(STag1 const &, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> (FuncType)(STag1 const &, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> (FuncType)(STag1 const &, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> (FuncType)(STag1 const &, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> (FuncType)(STag1 const &, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 const &, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> (FuncType)(STag1 const &, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> (FuncType)(STag1 const &, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> (FuncType)(STag1 const &, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 const &, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 const &, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const &, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> (FuncType)(STag1 const &&, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> (FuncType)(STag1 const &&, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> (FuncType)(STag1 const &&, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> (FuncType)(STag1 const &&, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> (FuncType)(STag1 const &&, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> (FuncType)(STag1 const &&, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> (FuncType)(STag1 const &&, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> (FuncType)(STag1 const &&, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> (FuncType)(STag1 const &&, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> (FuncType)(STag1 const &&, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> (FuncType)(STag1 const &&, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> (FuncType)(STag1 const &&, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> (FuncType)(STag1 const &&, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> (FuncType)(STag1 const &&, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> (FuncType)(STag1 const &&, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> (FuncType)(STag1 const &&, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> (FuncType)(STag1 volatile &, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> (FuncType)(STag1 volatile &, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> (FuncType)(STag1 volatile &, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> (FuncType)(STag1 volatile &, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> (FuncType)(STag1 volatile &, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> (FuncType)(STag1 volatile &, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> (FuncType)(STag1 volatile &, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> (FuncType)(STag1 volatile &, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> (FuncType)(STag1 volatile &, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> (FuncType)(STag1 volatile &&, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> (FuncType)(STag1 const volatile &, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 const &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &)> >(fnp);
#endif
  }
  {
    typedef ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> (FuncType)(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&);
    FuncType& fn = FreeFunctionRef11;
    FuncType* fnp = FreeFunctionRef11;
    bullet_five_assert<FuncType*, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#if TEST_STD_VER >= 11
    bullet_five_assert<FuncType&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fn);
    bullet_five_assert<FuncType*&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
    bullet_five_assert<FuncType* const volatile&&, STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&)> >(fnp);
#endif
  }
  {
    RefFunctor11 fn(makeTestType<RefFunctor11>(42));
    bullet_five_assert<RefFunctor11 &, ReturnTag<void() &> >(fn);
    bullet_five_assert<RefFunctor11 &&, ReturnTag<void() &&> >(fn);
    bullet_five_assert<RefFunctor11 const &, ReturnTag<void() const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&, ReturnTag<void() const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &, ReturnTag<void() volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&, ReturnTag<void() volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &, ReturnTag<void() const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&, ReturnTag<void() const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, ReturnTag<void(STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, ReturnTag<void(STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, ReturnTag<void(STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, ReturnTag<void(STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, ReturnTag<void(STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, ReturnTag<void(STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, ReturnTag<void(STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, ReturnTag<void(STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, ReturnTag<void(STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, ReturnTag<void(STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, ReturnTag<void(STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, ReturnTag<void(STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, ReturnTag<void(STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, ReturnTag<void(STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, ReturnTag<void(STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, ReturnTag<void(STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, ReturnTag<void(STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, ReturnTag<void(STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, ReturnTag<void(STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, ReturnTag<void(STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, ReturnTag<void(STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, ReturnTag<void(STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, ReturnTag<void(STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, ReturnTag<void(STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, ReturnTag<void(STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, ReturnTag<void(STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, ReturnTag<void(STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, ReturnTag<void(STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, ReturnTag<void(STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, ReturnTag<void(STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, ReturnTag<void(STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, ReturnTag<void(STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, ReturnTag<void(STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, ReturnTag<void(STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<RefFunctor11 &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RefFunctor11 const &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<RefFunctor11 const &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RefFunctor11 volatile &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<RefFunctor11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<RefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
  }
  {
    RRefFunctor11 fn(makeTestType<RRefFunctor11>(42));
    bullet_five_assert<RRefFunctor11 &&, ReturnTag<void() &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&, ReturnTag<void() const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&, ReturnTag<void() volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&, ReturnTag<void() const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, ReturnTag<void(STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, ReturnTag<void(STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, ReturnTag<void(STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, ReturnTag<void(STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, ReturnTag<void(STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, ReturnTag<void(STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, ReturnTag<void(STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, ReturnTag<void(STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, ReturnTag<void(STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, ReturnTag<void(STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, ReturnTag<void(STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, ReturnTag<void(STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, ReturnTag<void(STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, ReturnTag<void(STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<RRefFunctor11 const &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<RRefFunctor11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<RRefFunctor11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
  }
  {
    VAFunctor11 fn(makeTestType<VAFunctor11>(42));
    bullet_five_assert<VAFunctor11 &, ReturnTag<void(...) &> >(fn);
    bullet_five_assert<VAFunctor11 &&, ReturnTag<void(...) &&> >(fn);
    bullet_five_assert<VAFunctor11 const &, ReturnTag<void(...) const &> >(fn);
    bullet_five_assert<VAFunctor11 const &&, ReturnTag<void(...) const &&> >(fn);
    bullet_five_assert<VAFunctor11 volatile &, ReturnTag<void(...) volatile &> >(fn);
    bullet_five_assert<VAFunctor11 volatile &&, ReturnTag<void(...) volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &, ReturnTag<void(...) const volatile &> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &&, ReturnTag<void(...) const volatile &&> >(fn);
  }
  {
    FunctorForward11 fn(makeTestType<FunctorForward11>(42));
    bullet_five_assert<FunctorForward11 &, ReturnTag<void() &> >(fn);
    bullet_five_assert<FunctorForward11 &&, ReturnTag<void() &&> >(fn);
    bullet_five_assert<FunctorForward11 const &, ReturnTag<void() const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&, ReturnTag<void() const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &, ReturnTag<void() volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&, ReturnTag<void() volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &, ReturnTag<void() const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&, ReturnTag<void() const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, ReturnTag<void(STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, ReturnTag<void(STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, ReturnTag<void(STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, ReturnTag<void(STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, ReturnTag<void(STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, ReturnTag<void(STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, ReturnTag<void(STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, ReturnTag<void(STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, ReturnTag<void(STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, ReturnTag<void(STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, ReturnTag<void(STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, ReturnTag<void(STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, ReturnTag<void(STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, ReturnTag<void(STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, ReturnTag<void(STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, ReturnTag<void(STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, ReturnTag<void(STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, ReturnTag<void(STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, ReturnTag<void(STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, ReturnTag<void(STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, ReturnTag<void(STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, ReturnTag<void(STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, ReturnTag<void(STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, ReturnTag<void(STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, ReturnTag<void(STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, ReturnTag<void(STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, ReturnTag<void(STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, ReturnTag<void(STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, ReturnTag<void(STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, ReturnTag<void(STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, ReturnTag<void(STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, ReturnTag<void(STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, ReturnTag<void(STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, ReturnTag<void(STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, ReturnTag<void(STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, ReturnTag<void(STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, ReturnTag<void(STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, ReturnTag<void(STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 &, ReturnTag<void(STag1 &, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 &&, ReturnTag<void(STag1 &, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 const &, ReturnTag<void(STag1 &, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 const &&, ReturnTag<void(STag1 &, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 &, ReturnTag<void(STag1 &, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 &&, ReturnTag<void(STag1 &, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 const &, ReturnTag<void(STag1 &, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 &, ReturnTag<void(STag1 &, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 &&, ReturnTag<void(STag1 &, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 const &, ReturnTag<void(STag1 &, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 &, ReturnTag<void(STag1 &, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 &, ReturnTag<void(STag1 &&, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 &&, ReturnTag<void(STag1 &&, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 const &, ReturnTag<void(STag1 &&, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 &, ReturnTag<void(STag1 &&, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 &, ReturnTag<void(STag1 &&, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 &, ReturnTag<void(STag1 const &, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 &&, ReturnTag<void(STag1 const &, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 const &, ReturnTag<void(STag1 const &, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 &, ReturnTag<void(STag1 const &, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 &, ReturnTag<void(STag1 const &, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 &, ReturnTag<void(STag1 const &&, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 volatile &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &, STag1 const volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 volatile &&) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &) const volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) &> >(fn);
    bullet_five_assert<FunctorForward11 &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) &&> >(fn);
    bullet_five_assert<FunctorForward11 const &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) const &> >(fn);
    bullet_five_assert<FunctorForward11 const &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) const &&> >(fn);
    bullet_five_assert<FunctorForward11 volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) volatile &> >(fn);
    bullet_five_assert<FunctorForward11 volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) volatile &&> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &> >(fn);
    bullet_five_assert<FunctorForward11 const volatile &&,STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&, ReturnTag<void(STag1 const volatile &&, STag1 const volatile &&, STag1 const volatile &&) const volatile &&> >(fn);
  }
  {
    VAFunctor11 fn(makeTestType<VAFunctor11>(42));
    bullet_five_assert<VAFunctor11 &, ReturnTag<void(...) &> >(fn);
    bullet_five_assert<VAFunctor11 &,int, ReturnTag<void(...) &> >(fn);
    bullet_five_assert<VAFunctor11 &,int, int, ReturnTag<void(...) &> >(fn);
    bullet_five_assert<VAFunctor11 &,int, int, int, ReturnTag<void(...) &> >(fn);
    bullet_five_assert<VAFunctor11 &&, ReturnTag<void(...) &&> >(fn);
    bullet_five_assert<VAFunctor11 &&,int, ReturnTag<void(...) &&> >(fn);
    bullet_five_assert<VAFunctor11 &&,int, int, ReturnTag<void(...) &&> >(fn);
    bullet_five_assert<VAFunctor11 &&,int, int, int, ReturnTag<void(...) &&> >(fn);
    bullet_five_assert<VAFunctor11 const &, ReturnTag<void(...) const &> >(fn);
    bullet_five_assert<VAFunctor11 const &,int, ReturnTag<void(...) const &> >(fn);
    bullet_five_assert<VAFunctor11 const &,int, int, ReturnTag<void(...) const &> >(fn);
    bullet_five_assert<VAFunctor11 const &,int, int, int, ReturnTag<void(...) const &> >(fn);
    bullet_five_assert<VAFunctor11 const &&, ReturnTag<void(...) const &&> >(fn);
    bullet_five_assert<VAFunctor11 const &&,int, ReturnTag<void(...) const &&> >(fn);
    bullet_five_assert<VAFunctor11 const &&,int, int, ReturnTag<void(...) const &&> >(fn);
    bullet_five_assert<VAFunctor11 const &&,int, int, int, ReturnTag<void(...) const &&> >(fn);
    bullet_five_assert<VAFunctor11 volatile &, ReturnTag<void(...) volatile &> >(fn);
    bullet_five_assert<VAFunctor11 volatile &,int, ReturnTag<void(...) volatile &> >(fn);
    bullet_five_assert<VAFunctor11 volatile &,int, int, ReturnTag<void(...) volatile &> >(fn);
    bullet_five_assert<VAFunctor11 volatile &,int, int, int, ReturnTag<void(...) volatile &> >(fn);
    bullet_five_assert<VAFunctor11 volatile &&, ReturnTag<void(...) volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 volatile &&,int, ReturnTag<void(...) volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 volatile &&,int, int, ReturnTag<void(...) volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 volatile &&,int, int, int, ReturnTag<void(...) volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &, ReturnTag<void(...) const volatile &> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &,int, ReturnTag<void(...) const volatile &> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &,int, int, ReturnTag<void(...) const volatile &> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &,int, int, int, ReturnTag<void(...) const volatile &> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &&, ReturnTag<void(...) const volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &&,int, ReturnTag<void(...) const volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &&,int, int, ReturnTag<void(...) const volatile &&> >(fn);
    bullet_five_assert<VAFunctor11 const volatile &&,int, int, int, ReturnTag<void(...) const volatile &&> >(fn);
  }
